services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: flask-backend
    ports:
      - '5000:5000'
    environment:
      - FLASK_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
      - CLOUD_DB_PASSWORD=${CLOUD_DB_PASSWORD}
      - CLOUD_DB_INSTANCE_PUBLIC_IP=${CLOUD_DB_INSTANCE_PUBLIC_IP}
      - INSTANCE_CONNECTION_NAME=${INSTANCE_CONNECTION_NAME}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - PYTHONUNBUFFERED=1
      - GOOGLE_APPLICATION_CREDENTIALS=/app/cloudsql-key.json
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ./cloudsql-flask-key.json:/app/cloudsql-key.json:ro

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: nuxt-app
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/home/node/app
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    environment:
      - OLLAMA_MODEL=${OLLAMA_MODEL}
    volumes:
      - ./ollama/ollama:/root/.ollama
      - ./ollama_init.sh:/ollama_init.sh
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    entrypoint: ['/usr/bin/bash', '/ollama_init.sh']

  db:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
